# === SQL 관련 ===
# SQL 쿼리 출력
spring.jpa.show-sql=true
# SQL 포맷팅
spring.jpa.properties.hibernate.format_sql=true
# 바인딩 파라미터 표시
logging.level.org.hibernate.orm.jdbc.bind=trace
# SQL 주석 추가 (어떤 메서드에서 실행되었는지 표시)
spring.jpa.properties.hibernate.use_sql_comments=true

# === DDL 관련 ===
# 애플리케이션 시작 시 테이블 자동 생성/수정 (개발용)
# none: 아무것도 안함
# create: 기존 테이블 삭제 후 새로 생성
# create-drop: 종료 시 테이블 삭제
# update: 변경된 스키마만 적용 (개발 시 편리)
# validate: 스키마 검증만
spring.jpa.hibernate.ddl-auto=update

# === 성능 관련 ===
# batch insert 사용 (여러 건 insert 시 성능 향상)
spring.jpa.properties.hibernate.jdbc.batch_size=20
# batch 순서 정렬
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# === 기타 개발 편의 ===
# 지연 로딩 예외 발생 시 상세 정보 표시
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false
# open-in-view 경고 제거 (false 권장)
spring.jpa.open-in-view=false

# === 로깅 ===
# 트랜잭션 로그
logging.level.org.springframework.transaction=debug
# JPA 쿼리 실행 계획 확인
logging.level.org.hibernate.stat=debug
# 전체 SQL 로그 (show-sql 대신 사용 가능, 더 상세함)
# logging.level.org.hibernate.SQL=debug

# === 서버 관련 ===
# 서버 포트 변경
# server.port=8080
# 에러 메시지 상세 표시 (개발용)
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=always
server.error.include-exception=true

# DevTools 활성화 (기본값이 true라서 생략 가능)
spring.devtools.restart.enabled=true

# 재시작 제외 경로 설정 (선택)
spring.devtools.restart.exclude=static/**,public/**

# LiveReload 활성화 (브라우저 자동 새로고침)
spring.devtools.livereload.enabled=true

# 추가 감시 경로 설정 (선택)
spring.devtools.restart.additional-paths=src/main/resources


# === 로깅 레벨 설정 ===
# 전체 로그 레벨 (debug로 설정하면 모든 로그 표시)
logging.level.root=info
# 특정 패키지 로그 레벨
logging.level.kr.co.sinamu.gallery=debug
# 스프링 프레임워크 로그
logging.level.org.springframework.web=debug
# SQL 에러 로그
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper=error